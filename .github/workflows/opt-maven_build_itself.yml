# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# clear all permissions for GITHUB_TOKEN
# execute on any push or pull request from forked repo

name: Modified Can Maven build itself
permissions: {}
jobs:
  build:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        java:
        - 17
        - 21
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build (${{ matrix.os }}, ${{ matrix.java }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/maven/maven', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - run: touch optcd-3.txt
    - uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: temurin
        cache: maven
    - run: touch optcd-4.txt
    - name: Set up Maven
      run: mvn --errors --batch-mode --show-version org.apache.maven.plugins:maven-wrapper-plugin:3.3.2:wrapper
        "-Dmaven=3.9.7"
    - run: touch optcd-5.txt
    - name: Build with Maven
      run: ./mvnw install -e -B -V -DdistributionFileName=apache-maven
    - run: touch optcd-6.txt
    - name: Extract tarball
      shell: bash
      run: |-
        set +e
        if [ -f ${{ env.TAR_BALL }} ]; then
          temp_dir=$(mktemp -d)
          tar -xzf ${{ env.TAR_BALL }} -C "$temp_dir" --strip 1
          maven_bin_dir=$temp_dir/bin
          if [ -d $maven_bin_dir ]; then
            echo "tar.gz file \"${{ env.TAR_BALL }}\" successfully extracted in temporarily directory \"$temp_dir.\""
            echo "TEMP_MAVEN_BIN_DIR=$maven_bin_dir" >> $GITHUB_ENV
          else
            echo "$maven_bin_dir does not exist."
            exit 1;
          fi
        else
          echo "${{ env.TAR_BALL }} does not exist."
          exit 1;
        fi
      env:
        TAR_BALL: apache-maven/target/apache-maven-bin.tar.gz
    - run: touch optcd-7.txt
    - name: Clean with Maven
      run: ./mvnw -e -B -V clean
    - run: touch optcd-8.txt
    - name: Build again with Maven SNAPSHOT
      shell: bash
      run: |-
        set +e
        export PATH=${{ env.TEMP_MAVEN_BIN_DIR }}:$PATH
        mvn verify site -e -B -V -DdistributionFileName=apache-maven -Preporting
    - run: touch optcd-9.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build (${{ matrix.os }}, ${{ matrix.java }})
        path: /home/runner/inotifywait-log-build (${{ matrix.os }}, ${{ matrix.java
          }}).csv
    name: build (${{ matrix.os }}, ${{ matrix.java }})
'on':
- push
- workflow_dispatch
